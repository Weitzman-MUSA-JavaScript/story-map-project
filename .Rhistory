rename(rank = rank_all)
View(all_group_point)
st_write(all_group_point, "data/title_slide.geojson", driver = "GeoJSON")
cuisine_tract <- st_intersection(restaurants_final, tracts) %>%
st_drop_geometry() %>%
left_join(tracts, by = "NAME") %>%
group_by(cuisine_group, NAME) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(NAME) %>%
mutate(pct = 100 * count / sum(count)) %>%
ungroup() %>%
left_join(tracts, by = "NAME") %>%
st_as_sf()
cuisine_tract <- st_intersection(restaurants_final, tracts) %>%
st_drop_geometry() %>%
left_join(tracts, by = "NAME") %>%
group_by(cuisine_group, NAME) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(NAME) %>%
mutate(pct = 100 * count / sum(count)) %>%
ungroup() %>%
left_join(tracts, by = "NAME") %>%
st_as_sf()
View(cuisine_tract)
cuisine_tract <- st_intersection(restaurants_final, tracts) %>%
st_drop_geometry() %>%
left_join(tracts, by = "NAME") %>%
group_by(cuisine_group, NAME) %>%
summarise(count = n(), .groups = 'drop',
rank = rank) %>%
group_by(NAME) %>%
mutate(pct = 100 * count / sum(count)) %>%
ungroup() %>%
left_join(tracts, by = "NAME") %>%
st_as_sf()
cuisine_tract <- st_intersection(restaurants_final, tracts) %>%
st_drop_geometry() %>%
left_join(tracts, by = "NAME") %>%
group_by(cuisine_group, NAME) %>%
summarise(count = n(), .groups = 'drop')
group_by(NAME) %>%
mutate(pct = 100 * count / sum(count)) %>%
ungroup() %>%
left_join(tracts, by = "NAME") %>%
st_as_sf() %>%
group_by(NAME, cuisine_group) %>%
mutate(count = n()) %>%
ungroup() %>%
group_by(NAME) %>%
mutate(rank_in_group = dense_rank(desc(count))) %>%
ungroup()
cuisine_tract <- st_intersection(restaurants_final, tracts) %>%
st_drop_geometry() %>%
left_join(tracts, by = "NAME") %>%
group_by(cuisine_group, NAME) %>%
summarise(count = n(), .groups = 'drop')
group_by(NAME) %>%
mutate(pct = 100 * count / sum(count)) %>%
ungroup() %>%
left_join(tracts, by = "NAME")
View(tracts)
cuisine_tract <- st_intersection(restaurants_final, tracts) %>%
st_drop_geometry() %>%
left_join(tracts, by = "NAME") %>%
group_by(cuisine_group, NAME) %>%
summarise(count = n(), .groups = 'drop') %>%
ungroup() %>%
group_by(NAME) %>%
mutate(pct = 100 * count / sum(count)) %>%
ungroup() %>%
left_join(tracts, by = "NAME") %>%
st_as_sf() %>%
group_by(NAME, cuisine_group) %>%
mutate(count = n()) %>%
ungroup() %>%
group_by(NAME) %>%
mutate(rank_in_group = dense_rank(desc(count))) %>%
ungroup()
View(cuisine_tract)
cuisine_tract <- st_intersection(restaurants_final, tracts) %>%
st_drop_geometry() %>%
left_join(tracts, by = "NAME") %>%
group_by(cuisine_group, NAME) %>%
summarise(count = n(), .groups = 'drop') %>%
ungroup() %>%
group_by(NAME) %>%
mutate(pct = 100 * count / sum(count)) %>%
ungroup() %>%
left_join(tracts, by = "NAME") %>%
st_as_sf()
View(cuisine_tract)
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct)
View(top_cuisine_neigh)
View(top_cuisine_tract)
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
group_by(cuisine_group) %>%
mutate(rank = dense_rank(desc(count_cuisine))) %>%
ungroup()
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
group_by(cuisine_group) %>%
summarize(count_cuisine = sum(count), .groups = 'drop') %>%
mutate(rank = dense_rank(desc(count_cuisine))) %>%
ungroup()
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
group_by(cuisine_group) %>%
summarize(count_cuisine = sum(count), .groups = 'drop') %>%
ungroup() %>%
mutate(rank = dense_rank(desc(count_cuisine)))
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
group_by(cuisine_group) %>%
summarize(count_cuisine = sum(count), .groups = 'drop')
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
group_by(cuisine_group)
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
group_by(cuisine_group) %>%
summarize(count_cuisine = sum(count)) %>%
ungroup() %>%
mutate(rank = dense_rank(desc(count_cuisine)))
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup()
View(top_cuisine_tract)
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group) %>%
summarize(count_cuisine = sum(count)) %>%
ungroup() %>%
mutate(rank = dense_rank(desc(count_cuisine)))
summarize(count = nrow() %>%
mutate(rank = dense_rank(desc(count)))
top_cuisine_tract <- cuisine_tract %>%
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group) %>%
summarize(count = nrow()) %>%
ungroup() %>%
mutate(rank = dense_rank(desc(count)))
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group) %>%
summarize(count = nrow(.)) %>%
ungroup() %>%
mutate(rank = dense_rank(desc(count)))
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group) %>%
summarize(count = n()) %>%
ungroup()
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup()
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group, .groups = 'drop')
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group, .groups = 'drop') %>%
summarize(count = n())
cuisine_tract <- st_intersection(restaurants_final, tracts) %>%
st_drop_geometry() %>%
left_join(tracts, by = "NAME") %>%
group_by(cuisine_group, NAME) %>%
mutate(count = n()) %>%
ungroup() %>%
group_by(NAME) %>%
mutate(rank_in_group = dense_rank(desc(count_cuisine))) %>%
ungroup()
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group) %>%
mutate(count = n()) %>%
mutate(rank_in_group = dense_rank(desc(count_cuisine))) %>%
ungroup()
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group) %>%
mutate(count = n()) %>%
mutate(rank_in_group = dense_rank(desc(count))) %>%
ungroup()
View(top_cuisine_tract)
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group) %>%
mutate(count = n()) %>%
mutate(rank = dense_rank(desc(count))) %>%
ungroup()
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group) %>%
mutate(count = n()) %>%
ungroup() %>%
mutate(rank = dense_rank(desc(count)))
#st_write(top_cuisine_neigh, "data/top_cuisine_neigh.geojson", driver = "GeoJSON")
st_write(top_cuisine_tract, "data/second_slide.geojson", driver = "GeoJSON")
spruce_hill_rest <- neighs %>%
filter(MAPNAME %in% c("Spruce Hill")) %>%
st_intersection(all_group_point) %>%
st_as_sf()
st_write(all_group_point, "data/second-slide.geojson", driver = "GeoJSON")
#st_write(restaurants_final, "data/restaurants_final.geojson", driver = "GeoJSON")
#st_write(top_cuisine_neigh, "data/top_cuisine_neigh.geojson", driver = "GeoJSON")
st_write(top_cuisine_tract, "data/third-slide.geojson", driver = "GeoJSON")
View(spruce_hill_rest)
st_write(spruce_hill_rest, "data/title-slide.geojson", driver = "GeoJSON")
#st_write(restaurants_final, "data/restaurants_final.geojson", driver = "GeoJSON")
#st_write(top_cuisine_neigh, "data/top_cuisine_neigh.geojson", driver = "GeoJSON")
st_write(top_cuisine_tract, "data/third-slide.geojson", driver = "GeoJSON")
# Cuisine groupings
for (group in unique(restaurants_final$cuisine_group)) {
group_data <- restaurants_final %>% filter(cuisine_group == group)
st_write(group_data, paste0("data/", group, ".geojson"), driver = "GeoJSON")
}
# Cuisine groupings
for (group in unique(restaurants_final$cuisine_group)) {
group_data <- restaurants_final %>% filter(cuisine_group == group)
st_write(group_data, paste0("data/", group, ".geojson"), driver = "GeoJSON")
}
View(restaurants_final)
restaurants_final <- restaurants %>% filter(!is.na(cuisine_group)) %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
group_by(cuisine_group, cuisine) %>%
mutate(count_cuisine = n()) %>%
ungroup() %>%
group_by(cuisine_group) %>%
mutate(rank = row_number()) %>%
ungroup() %>%
# repeat for cuisine groups
group_by(cuisine_group) %>%
mutate(count_group = n()) %>%
ungroup() %>%
mutate(rank_all = dense_rank(desc(count_group))) %>%
ungroup() %>%
select(-count_cuisine, -count_group)
View(restaurants_final)
restaurants_final <- restaurants %>% filter(!is.na(cuisine_group)) %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
group_by(cuisine_group, cuisine) %>%
mutate(count_cuisine = n()) %>%
ungroup() %>%
group_by(cuisine_group) %>%
mutate(rank = row_number()) %>%
ungroup() %>%
# repeat for cuisine groups
group_by(cuisine_group) %>%
mutate(count_group = n()) %>%
ungroup() %>%
mutate(rank_all = row_number()) %>%
ungroup() %>%
select(-count_cuisine, -count_group)
View(restaurants_final)
restaurants_final <- restaurants %>% filter(!is.na(cuisine_group)) %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
group_by(cuisine_group, cuisine) %>%
mutate(count_cuisine = n()) %>%
ungroup() %>%
group_by(cuisine_group) %>%
arrange(cuisine_group, desc(count_cuisine), cuisine) %>%
mutate(rank_in_group = row_number())
View(restaurants_final)
test <- restaurants %>% filter(!is.na(cuisine_group) & cuisine == "Latin_American") %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
group_by(cuisine_group, cuisine) %>%
mutate(count_cuisine = n()) %>%
ungroup() %>%
group_by(cuisine_group) %>%
mutate(rank_in_group = dense_rank(desc(count_cuisine))) %>%
ungroup()
View(test)
View(restaurants)
test <- restaurants %>% filter(!is.na(cuisine_group) & cuisine == "Latin_American")
test <- restaurants %>% filter(!is.na(cuisine_group) & cuisine_group == "Latin_American") %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
group_by(cuisine_group, cuisine) %>%
mutate(count_cuisine = n()) %>%
ungroup() %>%
group_by(cuisine_group) %>%
mutate(rank_in_group = dense_rank(desc(count_cuisine))) %>%
ungroup()
test <- restaurants %>% filter(!is.na(cuisine_group) & cuisine_group == "Latin_American") %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
group_by(cuisine_group, cuisine) %>%
mutate(count_cuisine = n()) %>%
ungroup() %>%
group_by(cuisine_group) %>%
arrange(desc(count_cuisine))
View(test)
test <- restaurants %>% filter(!is.na(cuisine_group)) %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
group_by(cuisine_group, cuisine) %>%
summarise(count_cuisine = n(), .groups = 'drop') %>%
group_by(cuisine_group) %>%
arrange(desc(count_cuisine), cuisine) %>%  # Secondary sort by cuisine name
mutate(rank_in_group = row_number()) %>%
ungroup()
cuisine_ranks_df <- restaurants %>% filter(!is.na(cuisine_group)) %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
group_by(cuisine_group, cuisine) %>%
summarise(count_cuisine = n(), .groups = 'drop') %>%
group_by(cuisine_group) %>%
arrange(desc(count_cuisine), cuisine) %>%  # Secondary sort by cuisine name
mutate(rank_in_group = row_number()) %>%
ungroup()
cuisine_ranks_df <- restaurants %>% filter(!is.na(cuisine_group)) %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
group_by(cuisine_group, cuisine) %>%
summarise(count_cuisine = n(), .groups = 'drop') %>%
group_by(cuisine_group) %>%
arrange(desc(count_cuisine), cuisine) %>%
mutate(rank = row_number()) %>%
ungroup() %>%
select(cuisine, cuisine_group, rank)
View(cuisine_ranks_df)
cuisine_ranks_df <- restaurants %>% filter(!is.na(cuisine_group)) %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
group_by(cuisine_group, cuisine) %>%
summarise(count_cuisine = n(), .groups = 'drop') %>%
group_by(cuisine_group) %>%
arrange(desc(count_cuisine), cuisine) %>%
mutate(rank = row_number()) %>%
ungroup() %>%
select(cuisine, rank) %>%
st_drop_geometry()
View(cuisine_ranks_df)
restaurants_final <- restaurants %>% filter(!is.na(cuisine_group)) %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
left_join(cuisine_ranks_df, by = "cuisine")
View(restaurants_final)
group_ranks_df <- restaurants %>% filter(!is.na(cuisine_group)) %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
group_by(cuisine_group) %>%
summarise(count = n(), .groups = 'drop') %>%
arrange(desc(count)) %>%
mutate(rank = row_number()) %>%
ungroup() %>%
select(cuisine_group, rank_all) %>%
st_drop_geometry()
group_ranks_df <- restaurants %>% filter(!is.na(cuisine_group)) %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
group_by(cuisine_group) %>%
summarise(count = n(), .groups = 'drop') %>%
arrange(desc(count)) %>%
mutate(rank_group = row_number()) %>%
ungroup() %>%
select(cuisine_group, rank_group) %>%
st_drop_geometry()
View(group_ranks_df)
restaurants_final <- restaurants %>% filter(!is.na(cuisine_group)) %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
left_join(cuisine_ranks_df, by = "cuisine") %>%
left_join(group_ranks_df, by = "cuisine_group") %>%
```
restaurants_final <- restaurants %>% filter(!is.na(cuisine_group)) %>%
mutate(cuisine_group = str_replace_all(cuisine_group, "_", " "),
cuisine = str_replace_all(cuisine, "_", " "),
name = str_to_title(name)) %>%
left_join(cuisine_ranks_df, by = "cuisine") %>%
left_join(group_ranks_df, by = "cuisine_group")
all_group_point <- restaurants_final %>%
select(-rank) %>%
rename(rank = rank_all)
all_group_point <- restaurants_final %>%
select(-rank) %>%
rename(rank = rank_group)
st_write(all_group_point, "data/second-slide.geojson", driver = "GeoJSON")
all_group_point <- restaurants_final %>%
select(-rank, -cuisine) %>%
rename(rank = rank_group,
cuisine = cuisine_group)
View(all_group_point)
st_write(all_group_point, "data/second-slide.geojson", driver = "GeoJSON")
View(top_cuisine_tract)
cuisine_tract <- st_intersection(restaurants_final, tracts) %>%
st_drop_geometry() %>%
left_join(tracts, by = "NAME") %>%
group_by(cuisine_group, NAME) %>%
summarise(count = n(), .groups = 'drop') %>%
ungroup() %>%
group_by(NAME) %>%
mutate(pct = 100 * count / sum(count)) %>%
ungroup() %>%
left_join(tracts, by = "NAME") %>%
st_as_sf()
View(cuisine_tract)
View(group_ranks_df)
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group) %>%
mutate(count = n()) %>%
ungroup() %>%
mutate(rank = dense_rank(desc(count))) %>%
left_join(group_ranks_df, by = "cuisine_group")
#st_write(restaurants_final, "data/restaurants_final.geojson", driver = "GeoJSON")
#st_write(top_cuisine_neigh, "data/top_cuisine_neigh.geojson", driver = "GeoJSON")
st_write(top_cuisine_tract, "data/third-slide.geojson", driver = "GeoJSON")
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group) %>%
mutate(count = n()) %>%
ungroup() %>%
mutate(rank = dense_rank(desc(count))) %>%
left_join(group_ranks_df, by = "cuisine_group") %>%
select(-cuisine, -rank) %>%
rename(rank = rank_group,
cuisine = cuisine_group)
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group) %>%
mutate(count = n()) %>%
ungroup() %>%
mutate(rank = dense_rank(desc(count))) %>%
left_join(group_ranks_df, by = "cuisine_group")
top_cuisine_tract <- cuisine_tract %>%
group_by(NAME) %>%
slice_max(order_by = pct) %>%
ungroup() %>%
group_by(cuisine_group) %>%
mutate(count = n()) %>%
ungroup() %>%
mutate(rank = dense_rank(desc(count))) %>%
left_join(group_ranks_df, by = "cuisine_group") %>%
select(-rank) %>%
rename(rank = rank_group,
cuisine = cuisine_group)
#st_write(restaurants_final, "data/restaurants_final.geojson", driver = "GeoJSON")
#st_write(top_cuisine_neigh, "data/top_cuisine_neigh.geojson", driver = "GeoJSON")
st_write(top_cuisine_tract, "data/third-slide.geojson", driver = "GeoJSON")
spruce_hill_rest <- neighs %>%
filter(MAPNAME %in% c("Spruce Hill")) %>%
st_intersection(all_group_point) %>%
st_as_sf()
View(spruce_hill_rest)
st_write(spruce_hill_rest, "data/title-slide.geojson", driver = "GeoJSON")
# Cuisine groupings
for (group in unique(restaurants_final$cuisine_group)) {
group_data <- restaurants_final %>% filter(cuisine_group == group)
st_write(group_data, paste0("data/", group, ".geojson"), driver = "GeoJSON")
}
# Cuisine groupings
for (group in unique(restaurants_final$cuisine_group)) {
group_data <- restaurants_final %>% filter(cuisine_group == group)
st_write(group_data, paste0("data/", tolower(group), ".geojson"), driver = "GeoJSON")
}
